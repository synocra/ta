# # Ultralytics üöÄ AGPL-3.0 License - https://ultralytics.com/license



# # Model docs: https://docs.ultralytics.com/models/yolo11
# # Task docs: https://docs.ultralytics.com/tasks/detect
# # Ensure this module exists:
# # from ultralytics.nn.attention.coord_att import CoordAtt

# # Parameters
# nc: 80  # number of classes
# scales:
#   n: [0.50, 0.25, 1024]
#   s: [0.50, 0.50, 1024]
#   m: [0.50, 1.00, 512]
#   l: [1.00, 1.00, 512]
#   x: [1.00, 1.50, 512]


# # YOLO11n MODIFIED BACKBONE + CA
# backbone:
#   - [-1, 1, Conv, [64, 3, 2]]       # 0-P1/2
#   - [-1, 1, Conv, [128, 3, 2]]      # 1-P2/4
#   - [-1, 2, C3k2, [256, False, 0.25]]  # 2
#   - [-1, 1, CoordAtt, [256, 256]]   # 3. ‚úÖ CA at P2/4
#   - [-1, 1, Conv, [256, 3, 2]]      # 4-P3/8
#   - [-1, 2, C3k2, [512, False, 0.25]]  # 5
#   - [-1, 1, CoordAtt, [512, 512]]   # 6. ‚úÖ CA at P3/8
#   - [-1, 1, Conv, [512, 3, 2]]      # 7-P4/16
#   - [-1, 2, C3k2, [512, True]]      # 8
#   - [-1, 1, Conv, [1024, 3, 2]]     # 9-P5/32
#   - [-1, 2, C3k2, [1024, True]]     # 10
#   - [-1, 1, SPPF, [1024, 5]]        # 11
#   - [-1, 2, C2PSA, [1024]]          # 12
#   # Backbone output layers: P2 (3), P3 (6), P4 (8), P5 (12)

# # YOLO11n MODIFIED HEAD + CA
# head:
#   # üü© FPN path (Top-down): P5 ‚Üí P4 ‚Üí P3
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 13. Upsample P5
#   - [[-1, 8], 1, Concat, [1]]                   # 14. cat backbone P4
#   - [-1, 2, C3k2, [512, False]]                 # 15
#   - [-1, 1, CoordAtt, [512, 512]]               # 16. ‚úÖ CA in Neck (after P4 fusion)

#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 17. Upsample P4
#   - [[-1, 6], 1, Concat, [1]]                   # 18. cat backbone P3
#   - [-1, 2, C3k2, [256, False]]                 # 19
#   - [-1, 1, CoordAtt, [256, 256]]               # 20. ‚úÖ CA in Neck (after P3 fusion)

#   # üü© High-resolution P2 head
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 21. Upsample P3 ‚Üí P2
#   - [[-1, 1], 1, Concat, [1]]                   # 22. cat backbone P2 (Layer 1)
#   - [-1, 2, C3k2, [128, False]]                 # 23. P2/4-tiny head
#   - [-1, 1, CoordAtt, [128, 128]]               # 24. ‚úÖ CA on P2 head output

#   # üü© PAN path (Bottom-up): P2 ‚Üí P3 ‚Üí P4 ‚Üí P5
#   - [-1, 1, Conv, [256, 3, 2]]                  # 25. Downsample P2‚ÜíP3
#   - [[-1, 19], 1, Concat, [1]]                  # 26. cat P2_down and P3_head
#   - [-1, 2, C3k2, [256, False]]                 # 27. P3/8-small refined
#   - [-1, 1, CoordAtt, [256, 256]]               # 28. ‚úÖ CA on refined P3

#   - [-1, 1, Conv, [512, 3, 2]]                  # 29. Downsample P3‚ÜíP4
#   - [[-1, 15], 1, Concat, [1]]                  # 30. cat P3_down and P4_head
#   - [-1, 2, C3k2, [512, False]]                 # 31. P4/16-medium refined
#   - [-1, 1, CoordAtt, [512, 512]]               # 32. ‚úÖ CA on refined P4

#   - [-1, 1, Conv, [1024, 3, 2]]                 # 33. Downsample P4‚ÜíP5
#   - [[-1, 12], 1, Concat, [1]]                  # 34. cat P4_down and P5_backbone
#   - [-1, 2, C3k2, [1024, True]]                 # 35. P5/32-large refined
#   - [-1, 1, CoordAtt, [512, 512]]             # 36. ‚úÖ CA on refined P5

#   # üü© Detection Head ‚Äî 4 output scales
#   - [[24, 27, 31, 35], 1, Detect, [nc]]         # 37. Detect(P2, P3, P4, P5)


# YOLO11mod-Lite üöÄ
# Variant of YOLO11 with selective Coordinate Attention (CA) and C2f optimization
# Designed for moderate VRAM (e.g., Tesla T4, GTX1650) and small-to-medium datasets
# Author: Mukhlish Hidhayat (2025)

# ==================================================
# PARAMETERS
# ==================================================
nc: 80  # number of classes, override by dataset.yaml
scale: n  # model scale: n, s, m, l, x
scales:
  n: [0.50, 0.25, 1024]
  s: [0.50, 0.50, 1024]
  m: [0.50, 1.00, 512]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.50, 512]

# ==================================================
# BACKBONE (C2f optimized + CA selective)
# ==================================================
backbone:
  - [-1, 1, Conv, [64, 3, 2]]           # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]          # 1-P2/4
  - [-1, 1, C2f, [256, 0.25]]           # 2-lightweight replacement for C3k2
  - [-1, 1, CoordAtt, [256, 256]]       # 3 ‚úÖ CA at P3 backbone
  - [-1, 1, Conv, [256, 3, 2]]          # 4-P3/8
  - [-1, 1, C2f, [512, 0.25]]           # 5
  - [-1, 1, Conv, [512, 3, 2]]          # 6-P4/16
  - [-1, 1, C2f, [512, 0.25]]           # 7
  - [-1, 1, Conv, [1024, 3, 2]]         # 8-P5/32
  - [-1, 1, C2f, [1024, 0.25]]          # 9
  - [-1, 1, SPPF, [1024, 5]]            # 10
  - [-1, 1, C2f, [1024, 0.25]]          # 11 final bottleneck
  # Outputs: P2(3), P3(5), P4(7), P5(11)

# ==================================================
# NECK + HEAD (FPN + PAN + P2 Head)
# ==================================================
head:
  # üîπ FPN Top-down Path: P5 ‚Üí P4 ‚Üí P3
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 12 Upsample P5
  - [[-1, 7], 1, Concat, [1]]                   # 13 cat P4
  - [-1, 1, C2f, [512, 0.25]]                   # 14
  - [-1, 1, CoordAtt, [512, 512]]               # 15 ‚úÖ CA in neck (after P4 fusion)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 16 Upsample P4
  - [[-1, 5], 1, Concat, [1]]                   # 17 cat P3
  - [-1, 1, C2f, [256, 0.25]]                   # 18
  - [-1, 1, CoordAtt, [256, 256]]               # 19 ‚úÖ optional mid-level CA (kept lightweight)

  # üîπ High-Resolution P2 Head
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 20 Upsample P3 ‚Üí P2
  - [[-1, 1], 1, Concat, [1]]                   # 21 cat P2 backbone
  - [-1, 1, C2f, [128, 0.25]]                   # 22 tiny head
  - [-1, 1, CoordAtt, [128, 128]]               # 23 ‚úÖ CA only on P2 head

  # üîπ PAN Bottom-up Path
  - [-1, 1, Conv, [256, 3, 2]]                  # 24 Downsample P2‚ÜíP3
  - [[-1, 18], 1, Concat, [1]]                  # 25 cat P3
  - [-1, 1, C2f, [256, 0.25]]                   # 26
  # ‚ö†Ô∏è CA di P3/P4 bawah dihapus agar inference cepat

  - [-1, 1, Conv, [512, 3, 2]]                  # 27 Downsample P3‚ÜíP4
  - [[-1, 14], 1, Concat, [1]]                  # 28 cat P4
  - [-1, 1, C2f, [512, 0.25]]                   # 29

  - [-1, 1, Conv, [1024, 3, 2]]                 # 30 Downsample P4‚ÜíP5
  - [[-1, 11], 1, Concat, [1]]                  # 31 cat P5 backbone
  - [-1, 1, C2f, [1024, 0.25]]                  # 32

  # üîπ Detection Head (4 outputs)
  - [[23, 26, 29, 32], 1, Detect, [nc]]         # 33 Detect(P2, P3, P4, P5)
